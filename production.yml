version: '3.7'

#volumes:
#  production_traefik: {}

services:

  django:
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    container_name: tree-web-prod-container
    image: tree-web-prod-image
    expose:
      - 8001
    volumes:
      - .:/srv/app
      - ../tree-volumes/media:/tree-volumes/media
      - ../tree-volumes/static:/tree-volumes/static
      - ../tree-volumes/db:/tree-volumes/db
    command: /srv/start

    restart: always
    env_file:
      - .env

  nginx:
    image: nginx:1.17.6-alpine
    restart: unless-stopped
    volumes:
      - ./compose/production/nginx:/etc/nginx/conf.d
      - ../tree-volumes/static:/tree-volumes/static
      - ../tree-volumes/media:/tree-volumes/media
      - ../tree-volumes/certbot/conf:/etc/letsencrypt
      - ../tree-volumes/certbot/www:/var/www/certbot
    ports:
      - 80:80
      - 443:443
    #command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; don       e & nginx -g \"daemon off;\"'"
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ../tree-volumes/certbot/conf:/etc/letsencrypt
      - ../tree-volumes/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"


#  nginx:
#    image: nginx:1.17.6-alpine
#    restart: always
#    ports:
#      - 80:80
#    volumes:
#      - ./compose/production/nginx:/etc/nginx/conf.d
#      - ../tree-volumes/static:/tree-volumes/static
#      - ../tree-volumes/media:/tree-volumes/media
#    links:
#      - django:django
#  frontend:
#    container_name: frontend
#    build:
#      context: ./frontend
     #dockerfile: ./frontend/Dockerfile
#    volumes:
#      - ./frontend:/app
      #- /app/node_modules
#    ports:
#      - 3001:3000
#    environment:
#      - CHOKIDAR_USEPOLLING=true

#volumes:
#    letsencrypt: